<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- for questions check here: http://www.tutorialspoint.com/spring/ -->

	<!-- ********************************** handler chain configuration ********************************** -->
	
		<!-- JMS based receiving using ActiveMQ -->
	<bean name="jms_adapter"
		class="de.brockhaus.m2m.receiver.jms.JMSActiveMQReceiverAdapter" 
		scope="singleton" 
		init-method="init" 
		destroy-method="cleanUp">
		
		<!-- the last in line, no following handler 
		<constructor-arg name = "next">
			<null />
		</constructor-arg>
		-->
		<!-- the next handler in line, see below -->
		<constructor-arg ref="json_converter" />
		
		<!-- the accepted message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MPlainTextMessage</value>
    	</constructor-arg>
    	<!-- the sent message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MPlainTextMessage</value>
    	</constructor-arg>
    	
    	<!-- who deals with the file once content is sent -->
		<property name="msgDestName">
			<value>myTopic</value>
		</property>
    	
    	<!-- how to send, @see: http://activemq.apache.org/activemq-4-connection-uris.html -->
    	<property name="brokerConfig">
			<value>tcp://localhost:61616?jms.useAsyncSend=true</value>
		</property>
	
	</bean>
	
	<!-- converting the JSON 2 M2M message -->
	<bean name="json_converter"
		class=" de.brockhaus.m2m.handler.converter.JSON2M2MMessageConverter" scope="prototype">
		
		<!-- doing nothing  
		<constructor-arg name = "next">
			<null />
		</constructor-arg>
		-->
		
		<!-- the next handler in line, see below  -->
		<constructor-arg ref="db_handler" />
		
		<!-- the accepted message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MPlainTextMessage</value>
    	</constructor-arg>
    	<!-- the sent message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MMultiMessage</value>
    	</constructor-arg>
    	
	</bean>
	
	<!-- storing sensor message 2 persistent storage -->
	<bean name="db_handler"
		class="de.brockhaus.m2m.handler.database.DatabaseHandler" scope="singleton">
		
		<!-- doing nothing  -->
		<constructor-arg name = "next">
			<null />
		</constructor-arg>
		
		<!-- the accepted message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MMultiMessage</value>
    	</constructor-arg>
    	<!-- the sent message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MMultiMessage</value>
    	</constructor-arg>
    	
    	<!-- which dao is to be used? -->
    	<property name="dao" ref = "cassandra-dao" />
			  	
	</bean>
	
	<!-- ********************************** utilities and other ********************************** -->
	<bean name="dummy-dao"
		class="de.brockhaus.m2m.handler.database.dummy.SensorDataDummyDAO" scope="singleton" />
		
	<bean name="cassandra-dao"
		class="de.brockhaus.m2m.handler.database.cassandra.SensorDataCassandraDAO" scope="singleton" 
		init-method = "init"
		destroy-method = "shutDown">
	
		<constructor-arg ref="cassandra-datasource" />
	</bean>
		
		
	<bean name="cassandra-datasource"
		class="de.brockhaus.m2m.handler.database.cassandra.CassandraDBUtil" scope="singleton">
		
		<property name="hostIP">
			<value>127.0.0.1</value>
		</property>
		
		<property name="keyspace">
			<value>test</value>
		</property>
	</bean>
	
</beans>