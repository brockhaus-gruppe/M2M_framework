<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- for questions check here: http://www.tutorialspoint.com/spring/ -->

	<!-- Enable AspectJ style of Spring AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- ********************************** handler chain ************************************************ -->
	<bean id="handler_chain" class="de.brockhaus.m2m.handler.HandlerChainHolder"
		scope="singleton">
		<property name="stack">
			<list value-type="de.brockhaus.m2m.message.M2MMessageHandler">
				<ref bean="start" />
				<ref bean="json_converter" />
<!-- 				<ref bean="http_sender" /> -->
				<ref bean="dummy_sender" />
			</list>
		</property>
	</bean>


	<!-- ********************************** handler configuration ********************************** -->
	<bean id="abstract_handler" class="de.brockhaus.m2m.handler.AbstractM2MMessageHandler"
		abstract="true" scope="singleton">
		<property name="continueProceeding" value="true" />
		<property name="handlerChain" ref="handler_chain" />
	</bean>

	<!-- RMI based receiving -->
	<bean name="start"
		class="de.brockhaus.m2m.receiver.rmi.M2MMessageRMIReceiverAdapter" 
		parent = "abstract_handler"
		scope="singleton" 
		init-method="init" >
		
		<!-- the accepted message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MSensorMessage</value>
    	</constructor-arg>
    	<!-- the sent message type -->
		<constructor-arg>
        	<value type="java.lang.String">de.brockhaus.m2m.message.M2MMultiMessage</value>
    	</constructor-arg>
    	
    	<!-- which machine we're running on -->
		<property name="host">
			<value>localhost</value>
		</property>
    	<!-- which port we're using -->
		<property name="port">
			<value>1099</value>
		</property>
		<!-- under what name we're binding the stub -->
		<property name="bindingName">
			<value>m2m_rmi_receiver</value>
		</property>

	</bean>

	<!-- converting the message to JSON -->
	<bean name="json_converter"
		class="de.brockhaus.m2m.handler.converter.Message2JSONConverterHandler"
		parent="abstract_handler" scope="singleton">

		<!-- the accepted message type -->
		<constructor-arg>
			<value type="java.lang.String">de.brockhaus.m2m.message.M2MMultiMessage</value>
		</constructor-arg>
		<!-- the sent message type -->
		<constructor-arg>
			<value type="java.lang.String">de.brockhaus.m2m.message.M2MPlainTextMessage</value>
		</constructor-arg>

	</bean>

	<!-- sending 2 a dummy -->
	<bean name="dummy_sender" class="de.brockhaus.m2m.sender.dummy.DummySendingWorker"
		parent="abstract_handler" scope="singleton">

		<!-- the accepted message type  -->
		<constructor-arg>
			<value type="java.lang.String">de.brockhaus.m2m.message.M2MPlainTextMessage</value>
		</constructor-arg>
	 	<!-- the sent message type  -->
		<constructor-arg>
			<value type="java.lang.String">de.brockhaus.m2m.message.M2MSensorMessage</value>
		</constructor-arg>
	</bean>

	<!-- sending through http -->
	<bean name="http_sender" class="de.brockhaus.m2m.sender.http.HTTPSendingWorker"
		scope="singleton">

		<!-- the accepted message type -->
		<constructor-arg>
			<value type="java.lang.String">de.brockhaus.m2m.message.M2MPlainTextMessage</value>
		</constructor-arg>
		<!-- the sent message type -->
		<constructor-arg>
			<value type="java.lang.String">de.brockhaus.m2m.message.M2MPlainTextMessage</value>
		</constructor-arg>

		<!-- who deals with the file once content is sent -->
		<property name="url">
			<value>http://localhost:8080/sensorData/sensorDataReceiver</value>
		</property>

	</bean>

	<!-- ********************************** utilities and other ********************************** -->


	<!-- *********************************** AOP ************************************************* -->
	<!-- Performance Logging Aspect 
	<bean id="logAspect" class="de.brockhaus.m2m.aspect.PerformanceLogAspect"
		scope="prototype" />
	<aop:config>
		<aop:aspect id="aspectLogging" ref="logAspect">
			<aop:pointcut id="pointCutAroundM2MMessagePOJOReceiverAdapter"
				expression="execution( 
		* de.brockhaus.m2m.receiver.pojo.M2MMessagePOJOReceiverAdapter.handleMessage(..)) 
		|| execution( * de.brockhaus.m2m.handler.converter.Message2JSONConverterHandler.handleMessage(..))" />
			<aop:around method="logAroundExecutionTime"
				pointcut-ref="pointCutAroundM2MMessagePOJOReceiverAdapter" />
		</aop:aspect>
	</aop:config>
	-->

</beans>